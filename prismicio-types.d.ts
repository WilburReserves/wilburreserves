// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type EmbersDocumentDataSlicesSlice = never;

/**
 * Content for Embers documents
 */
interface EmbersDocumentData {
  /**
   * Title field in *Embers*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: embers.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Bottle Image field in *Embers*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: embers.bottle_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  bottle_image: prismic.ImageField<never>;

  /**
   * Feature Image field in *Embers*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: embers.feature_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  feature_image: prismic.ImageField<never>;

  /**
   * Edition field in *Embers*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: embers.edition
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  edition: prismic.KeyTextField;

  /**
   * Description field in *Embers*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: embers.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Price field in *Embers*
   *
   * - **Field Type**: Number
   * - **Placeholder**: (in kobo)
   * - **API ID Path**: embers.price
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  price: prismic.NumberField;

  /**
   * Taste Profile field in *Embers*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: sweet
   * - **API ID Path**: embers.taste_profile
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  taste_profile: prismic.SelectField<"sweet" | "woody" | "spicy", "filled">;

  /**
   * Mood field in *Embers*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: smooth
   * - **API ID Path**: embers.mood
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  mood: prismic.SelectField<"smooth" | "bold" | "luxurious", "filled">;

  /**
   * Slice Zone field in *Embers*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: embers.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<EmbersDocumentDataSlicesSlice> /**
   * Meta Image field in *Embers*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: embers.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */;
  meta_image: prismic.ImageField<never>;
}

/**
 * Embers document from Prismic
 *
 * - **API ID**: `embers`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type EmbersDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<EmbersDocumentData>, "embers", Lang>;

type HomepageDocumentDataSlicesSlice =
  | VideoSlice
  | CallToActionSlice
  | EmberListSlice
  | ProductFeatureSlice
  | ScrollTextSlice
  | HeroSlice;

/**
 * Content for Homepage documents
 */
interface HomepageDocumentData {
  /**
   * Slice Zone field in *Homepage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
  /**
   * Site Title field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.site_title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  site_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.meta_description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Fallback OG Image field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.fallback_og_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  fallback_og_image: prismic.ImageField<never>;

  /**
   * Navigation Link field in *Settings*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.navigation_link
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  navigation_link: prismic.Repeatable<
    prismic.LinkField<string, string, unknown, prismic.FieldState, never>
  >;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SettingsDocumentData>,
    "settings",
    Lang
  >;

export type AllDocumentTypes =
  | EmbersDocument
  | HomepageDocument
  | SettingsDocument;

/**
 * Primary content in *CallToAction → Default → Primary*
 */
export interface CallToActionSliceDefaultPrimary {
  /**
   * Eyebrow field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.eyebrow
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrow: prismic.KeyTextField;

  /**
   * Heading field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;

  /**
   * Button field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.button
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  button: prismic.Repeatable<
    prismic.LinkField<
      string,
      string,
      unknown,
      prismic.FieldState,
      "Primary" | "Secondary"
    >
  >;
}

/**
 * Default variation for CallToAction Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CallToActionSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *CallToAction*
 */
type CallToActionSliceVariation = CallToActionSliceDefault;

/**
 * CallToAction Shared Slice
 *
 * - **API ID**: `call_to_action`
 * - **Description**: CallToAction
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSlice = prismic.SharedSlice<
  "call_to_action",
  CallToActionSliceVariation
>;

/**
 * Item in *EmberList → Default → Primary → Embers*
 */
export interface EmberListSliceDefaultPrimaryEmbersItem {
  /**
   * Ember field in *EmberList → Default → Primary → Embers*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: ember_list.default.primary.embers[].ember
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  ember: prismic.ContentRelationshipField<"embers">;
}

/**
 * Primary content in *EmberList → Default → Primary*
 */
export interface EmberListSliceDefaultPrimary {
  /**
   * Eyebrow field in *EmberList → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: ember_list.default.primary.eyebrow
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrow: prismic.KeyTextField;

  /**
   * Heading field in *EmberList → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: ember_list.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *EmberList → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: ember_list.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;

  /**
   * Embers field in *EmberList → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: ember_list.default.primary.embers[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  embers: prismic.GroupField<Simplify<EmberListSliceDefaultPrimaryEmbersItem>>;
}

/**
 * Default variation for EmberList Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type EmberListSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<EmberListSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *EmberList*
 */
type EmberListSliceVariation = EmberListSliceDefault;

/**
 * EmberList Shared Slice
 *
 * - **API ID**: `ember_list`
 * - **Description**: EmberList
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type EmberListSlice = prismic.SharedSlice<
  "ember_list",
  EmberListSliceVariation
>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * Heading field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;

  /**
   * Button field in *Hero → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.button
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  button: prismic.Repeatable<
    prismic.LinkField<
      string,
      string,
      unknown,
      prismic.FieldState,
      "Primary" | "Secondary"
    >
  >;

  /**
   * Image field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

/**
 * Primary content in *ProductFeature → Default → Primary*
 */
export interface ProductFeatureSliceDefaultPrimary {
  /**
   * Heading field in *ProductFeature → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: product_feature.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Description field in *ProductFeature → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: product_feature.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Feature Image field in *ProductFeature → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: product_feature.default.primary.mage
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  mage: prismic.ImageField<never>;

  /**
   * Ember field in *ProductFeature → Default → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: product_feature.default.primary.ember
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  ember: prismic.ContentRelationshipField<"embers">;
}

/**
 * Default variation for ProductFeature Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ProductFeatureSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ProductFeatureSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ProductFeature*
 */
type ProductFeatureSliceVariation = ProductFeatureSliceDefault;

/**
 * ProductFeature Shared Slice
 *
 * - **API ID**: `product_feature`
 * - **Description**: ProductFeature
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ProductFeatureSlice = prismic.SharedSlice<
  "product_feature",
  ProductFeatureSliceVariation
>;

/**
 * Primary content in *ScrollText → Default → Primary*
 */
export interface ScrollTextSliceDefaultPrimary {
  /**
   * Eyebrow field in *ScrollText → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: scroll_text.default.primary.eyebrow
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrow: prismic.KeyTextField;

  /**
   * Text field in *ScrollText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: scroll_text.default.primary.text
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  text: prismic.RichTextField;
}

/**
 * Default variation for ScrollText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ScrollTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ScrollTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ScrollText*
 */
type ScrollTextSliceVariation = ScrollTextSliceDefault;

/**
 * ScrollText Shared Slice
 *
 * - **API ID**: `scroll_text`
 * - **Description**: ScrollText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ScrollTextSlice = prismic.SharedSlice<
  "scroll_text",
  ScrollTextSliceVariation
>;

/**
 * Primary content in *Video → Default → Primary*
 */
export interface VideoSliceDefaultPrimary {
  /**
   * Youtube Video Id field in *Video → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: eTEsWseiDdg
   * - **API ID Path**: video.default.primary.youtube_video_id
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  youtube_video_id: prismic.KeyTextField;
}

/**
 * Default variation for Video Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type VideoSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<VideoSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Video*
 */
type VideoSliceVariation = VideoSliceDefault;

/**
 * Video Shared Slice
 *
 * - **API ID**: `video`
 * - **Description**: Video
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type VideoSlice = prismic.SharedSlice<"video", VideoSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      EmbersDocument,
      EmbersDocumentData,
      EmbersDocumentDataSlicesSlice,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      SettingsDocument,
      SettingsDocumentData,
      AllDocumentTypes,
      CallToActionSlice,
      CallToActionSliceDefaultPrimary,
      CallToActionSliceVariation,
      CallToActionSliceDefault,
      EmberListSlice,
      EmberListSliceDefaultPrimaryEmbersItem,
      EmberListSliceDefaultPrimary,
      EmberListSliceVariation,
      EmberListSliceDefault,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceVariation,
      HeroSliceDefault,
      ProductFeatureSlice,
      ProductFeatureSliceDefaultPrimary,
      ProductFeatureSliceVariation,
      ProductFeatureSliceDefault,
      ScrollTextSlice,
      ScrollTextSliceDefaultPrimary,
      ScrollTextSliceVariation,
      ScrollTextSliceDefault,
      VideoSlice,
      VideoSliceDefaultPrimary,
      VideoSliceVariation,
      VideoSliceDefault,
    };
  }
}
